import { Navigate, useLocation, useParams } from 'react-router-dom';
import { ReactNode } from 'react';
import useAuth from 'hooks/auth/useAuth';
import { IsAuthorizedRequestStatus } from 'enums';

interface ProtectedRouteProps {
  children: ReactNode;
}

const RequireAuth = ({ children }: ProtectedRouteProps) => {
  const { userId } = useParams();
  console.log(userId);
  const isAuthorized = useAuth();
  const location = useLocation();

  if (isAuthorized === IsAuthorizedRequestStatus.NOT_AUTHORIZED) {
    return <Navigate to="/" replace state={{ from: location.pathname }} />;
  }

  return <>{children}</>;
};

export default RequireAuth;
