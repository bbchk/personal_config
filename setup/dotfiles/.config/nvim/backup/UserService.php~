<?php
namespace App\Models\Services;


use Exception;
use App\Models\User;
use App\Models\Article;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use App\Services\CloudinaryServiceInterface;
use CloudinaryLabs\CloudinaryLaravel\Facades\Cloudinary;

class UserService
{
    public function listAllUsers($pageSize, $page, ?array $sort, $search)
    {
        $query = User::query();

        if (!is_null($search)) {
            $query
                ->where('name', 'ilike', "%$search%")
                ->orWhere('email', 'ilike', "%$search%");
        }

        if(!$sort) {
            $query = $query->orderBy('created_at', 'desc');
        }
        else
        {
            foreach ($sort as $key => $direction) {
                $query = $query->orderBy($key, $direction);
            }
        }

        foreach ($sort as $key => $direction) {
            $query = $query->orderBy($key, $direction);
        }

        return $query
            ->paginate(perPage: $pageSize, page: $page)
            ->withQueryString();

    }

    public function findUserById(int $userId): USer
    {
        $user = User::query()
            ->where('id', $userId)
            ->first();

        if (is_null($user)) {
            abort(404, 'User not found');
        }

        return $user;
    }


    public function followerFollowingCount()
    {
        $user = Auth::user();
        $followers = $user->followers->count();
        $following = $user->following->count();

        return
        [
            'followers' => $followers,
            'following' => $following
        ];
    }

}


