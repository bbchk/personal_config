<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rules\File;

class ArticleMutationRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    protected function prepareforvalidation(): void
    {
        $isPremium = $this->input('is_premium');
        $this->merge([
            'is_premium' => $isPremium === 'true' || $isPremium === '1' || $isPremium === true || $isPremium === 1,
        ]);
    }
    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'title' => ['required', 'string'],
            'content' => ['required', 'string'],
            'tags' => ['nullable', 'array'],
            'image' => ['nullable', File::image()->max('10mb')],
            'is_premium' => ['required']
        ];
    }

    public function messages(): array
    {
        return [
            'title.required' => 'The title field is required.',
            'title.string' => 'The title field must be a string.',
            'content.required' => 'The content field is required.',
            'content.string' => 'The content field must be a string.',
            'is_premium.boolean' => 'is_premium field must be a boolean'
        ];
    }
}