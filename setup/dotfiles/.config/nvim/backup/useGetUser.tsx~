import { useParams } from 'react-router-dom';
import { queryOptions, useQuery } from '@tanstack/react-query';
import { getUserById } from 'api/profile';

export const buildUserByIdQueryOptions = (userId: number) => {
  return queryOptions({
    queryKey: ['user', userId],
    queryFn: () => getUserById({ userId }),
    staleTime: 1000 * 20
  });
};

const useGetUser = () => {
  const { userId } = useParams<{ userId: string }>();

  if (!userId) {
    throw new Error('USER ID is required');
  }

  console.log(userId);

  const {
    data: user,
    isLoading: isUserLoading,
    error: userError
  } = useQuery(buildUserByIdQueryOptions(+userId));
  console.log(user);

  return { user, isUserLoading, userError };
};

export default useGetUser;
