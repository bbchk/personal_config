import useGetTags from 'hooks/useGetTags';
import { Link, useNavigate, useSearchParams } from 'react-router-dom';
import { Tag } from 'types';
import { getSearchWith } from 'utils';

type Props = {
  data: Tag[] | undefined;
  tagId: string;
  searchParams: URLSearchParams;
};

const TagsMenu = () => {
  const [searchParams] = useSearchParams();
  const tagId = searchParams.get('tagId') || '0';
  const { data } = useGetTags();

  return (
    <>
<<<<<<< HEAD:frontend/src/components/TagsMenu.tsx
      <TagsMenuDesktop tagId={tagId} searchParams={searchParams} data={data} />

      <TagsMenuMobile tagId={tagId} searchParams={searchParams} data={data} />
=======
      <CategoryMenuDesktop
        tagId={tagId}
        searchParams={searchParams}
        data={data}
      />

      <CategoryMenuMobile
        tagId={tagId}
        searchParams={searchParams}
        data={data}
      />
>>>>>>> c0c570d3 (feat: Added Premium Article Page. Added Subscription Edit page. Updated Confirmation Delete Modal):frontend/src/components/CategoryMenu.tsx
    </>
  );
};

<<<<<<< HEAD:frontend/src/components/TagsMenu.tsx
const TagsMenuDesktop = ({ tagId, searchParams, data }: Props) => {
=======
const CategoryMenuDesktop = ({ tagId, searchParams, data }: Props) => {
>>>>>>> c0c570d3 (feat: Added Premium Article Page. Added Subscription Edit page. Updated Confirmation Delete Modal):frontend/src/components/CategoryMenu.tsx
  return (
    <ul className="hidden h-9 items-center justify-center gap-3 rounded-full border border-primary bg-dark-200 md:flex">
      <li
        className={`flex h-full items-center px-3 ${
          tagId === '0' ? 'button-primary border-4 border-dark-200' : ''
        }`}
      >
        <Link
          to={{
            search: getSearchWith(searchParams, {
              tagId: '0',
              page: '1'
            })
          }}
        >
          All topics
        </Link>
      </li>

      {data?.slice(0, data.length - 1).map((category) => (
        <li
          key={category.id}
          className={`flex h-full items-center px-3 ${
            category.id === +tagId
              ? 'button-primary border-4 border-dark-200'
              : ''
          }`}
        >
          <Link
            to={{
              search: getSearchWith(searchParams, {
                tagId: category.id.toString(),
                page: '1'
              })
            }}
          >
            {category.name}
          </Link>
        </li>
      ))}
    </ul>
  );
};

<<<<<<< HEAD:frontend/src/components/TagsMenu.tsx
const TagsMenuMobile = ({ tagId, searchParams, data }: Props) => {
=======
const CategoryMenuMobile = ({ tagId, searchParams, data }: Props) => {
>>>>>>> c0c570d3 (feat: Added Premium Article Page. Added Subscription Edit page. Updated Confirmation Delete Modal):frontend/src/components/CategoryMenu.tsx
  const navigate = useNavigate();

  const handleTagChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    const selectedtagId = event.target.value;
    navigate({
      search: getSearchWith(searchParams, {
        tagId: selectedtagId,
        page: '1'
      })
    });
  };
  return (
    <select
      onChange={handleTagChange}
      value={tagId}
      className="rounded border bg-dark-100 px-2 py-1 md:hidden"
    >
      <option value="0" className="bg-dark-100">
        All topics
      </option>

      {data?.slice(0, data.length - 1).map((category) => (
        <option key={category.id} value={category.id} className="bg-dark-100">
          {category.name}
        </option>
      ))}
    </select>
  );
};

export default TagsMenu;
