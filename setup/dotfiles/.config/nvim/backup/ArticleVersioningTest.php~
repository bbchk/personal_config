// tests/Feature/ArticleHistoryTest.php
namespace Tests\Feature;

use Tests\TestCase;
use App\Models\Article;
use Illuminate\Foundation\Testing\RefreshDatabase;

class ArticleHistoryTest extends TestCase
{
use RefreshDatabase;

public function test_article_update_creates_version()
{
$article = Article::factory()->create();

$response = $this->putJson("/api/articles/{$article->id}", [
'title' => 'Updated Title',
'content' => 'Updated Content',
]);

$response->assertStatus(200);
$this->assertDatabaseHas('article_versions', [
'article_id' => $article->id,
'title' => $article->title,
'content' => $article->content,
]);
}

public function test_can_retrieve_article_versions()
{
$article = Article::factory()->create();
$article->versions()->create(['title' => 'Old Title', 'content' => 'Old Content']);

$response = $this->getJson("/api/articles/{$article->id}/versions");

$response->assertStatus(200)
->assertJsonCount(1);
}

public function test_can_restore_article_version()
{
$article = Article::factory()->create(['title' => 'Current Title', 'content' => 'Current Content']);
$oldVersion = $article->versions()->create(['title' => 'Old Title', 'content' => 'Old Content']);

$response = $this->postJson("/api/articles/{$article->id}/restore/{$oldVersion->id}");

$response->assertStatus(200);
$this->assertDatabaseHas('articles', [
'id' => $article->id,
'title' => 'Old Title',
'content' => 'Old Content',
]);
}
}
