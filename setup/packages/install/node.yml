---
- name: Define node version var
  set_fact:
    node_version: 14.17.0
    nvm_dir: "{{ ansible_env.HOME }}/.nvm"

- name: Check if nvm is installed
  shell: |
    [ -s "{{ nvm_dir }}/nvm.sh" ] && . "{{ nvm_dir }}/nvm.sh" && command -v nvm
  register: nvm_check
  ignore_errors: yes
  changed_when: false

- name: Get latest NVM version
  shell: |
    curl -s https://api.github.com/repos/nvm-sh/nvm/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/'
  register: nvm_version
  when: nvm_check.rc != 0
  changed_when: false

- name: Install nvm
  shell: |
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/{{ nvm_version.stdout }}/install.sh | zsh
  args:
    executable: /bin/zsh
  when: nvm_check.rc != 0

- name: Check if Node.js is installed
  shell: |
    . "{{ nvm_dir }}/nvm.sh" && nvm list | grep -q {{ node_version }}
  register: node_check
  args:
    executable: /bin/zsh
  ignore_errors: yes
  changed_when: false

- name: Install Node.js and npm
  shell: |
    . "{{ nvm_dir }}/nvm.sh" && nvm install {{ node_version }} && nvm alias default {{ node_version }}
  args:
    executable: /bin/zsh
  when: node_check.rc != 0

- name: Check if TypeScript is installed
  shell: |
    . "{{ nvm_dir }}/nvm.sh" && npm list -g typescript
  register: typescript_check
  args:
    executable: /bin/zsh
  ignore_errors: yes
  changed_when: false

- name: Install TypeScript globally
  shell: |
    . "{{ nvm_dir }}/nvm.sh" && npm install -g typescript
  args:
    executable: /bin/zsh
  when: typescript_check.rc != 0

- name: Check if ESLint is installed
  shell: |
    . "{{ nvm_dir }}/nvm.sh" && npm list -g eslint
  register: eslint_check
  args:
    executable: /bin/zsh
  ignore_errors: yes
  changed_when: false

- name: Install ESLint globally
  shell: |
    . "{{ nvm_dir }}/nvm.sh" && npm install -g eslint
  args:
    executable: /bin/zsh
  when: eslint_check.rc != 0
