---
# ------------------------------
# pacman
# ------------------------------

# TODO: delete dolphin file manager

- name: Define package list
  set_fact:
    pacman_packages:
      - "systemd"
      - "systemd-sysvcompat"
      - "git"
      - "base-devel"
      - "keepassxc"
      - "tmux"
      - "neovim"
      - "openfortivpn"
      - "fzf"
      - "github-cli"
      - "zsh"
      - "hyprpaper"
      - "grim"
      - "brightnessctl"
      - "pavucontrol"
      - "blueman"
      - "stow"
      - "android-tools"
      - "code"
      - "nautilus"
      - "mako"
      - "qbittorrent"
      - "mpv"
      - "go"
      - "lua"
      - "acpi"
      - "keychain"
      - "difftastic"
      - "man"
      - "zip"
      - "unzip"
      - "lsof"
      - "ttf-fira-code"
      - "ttf-font-awesome"
      - "libcamera"
      - "bluez"
      - "bluez-utils"
      - "sof-firmware"

# sudo modprobe sof-audio-pci-intel-tgl

- name: Install necessary packages for Arch
  pacman:
    name: "{{ pacman_packages }}"
    state: present
  become: true

# ------------------------------
# yay
# ------------------------------

# install yay itself
- name: Check if yay is already installed
  stat:
    path: /usr/bin/yay
  register: yay_installed

- name: Clone yay-git repository
  git:
    repo: "https://aur.archlinux.org/yay.git"
    dest: "/tmp/yay-git"
    depth: 1
    update: true
  when: not yay_installed.stat.exists

- name: Build and install yay
  command:
    cmd: makepkg -sri --noconfirm
    chdir: /tmp/yay-git
    creates: /usr/bin/yay
  when: not yay_installed.stat.exists

# install packages using yay
- name: Define aur package list
  set_fact:
    yay_packages:
      - "google-chrome"
      - "grimshot"
      - "pnpm"
      - "bruno"
      - "xwaylandvideobridge-git"
      - "aws-cli-v2"
      - "sioyek"

- name: Ensure AUR packages are installed and updated
  shell: |
    if ! yay -Q {{ item }} || yay -Qu | grep -q "^{{ item }}"; then
      yay -S --noconfirm {{ item }}
    fi
  args:
    executable: /bin/bash
  loop: "{{ yay_packages }}"

# ------------------------------
# Install from git, source, etc.
# ------------------------------

- name: Find all files in ./install
  find:
    paths: "{{ playbook_dir }}/packages/install"
    patterns: "*.yml"
  register: pckg_install_files

- name: Include each install file
  include_tasks: "{{ pckg_install_file.path }}"
  loop: "{{ pckg_install_files.files }}"
  loop_control:
    loop_var: pckg_install_file
