import {
  ProfileUpdateForm,
  SearchParams,
  Subscription,
  SubscriptionForm
} from 'types';
import { httpClient } from '../http';
import { ApiErrorHandler } from 'errors/ApiError';

const updateProfile = async (data: ProfileUpdateForm) => {
  try {
    const response = await httpClient({
      method: 'PUT',
      url: '/profile',
      data
    });

    return response.data;
  } catch (error) {
    ApiErrorHandler.handle(error);
  }
};

const deleteProfile = async (data: { password: string }) => {
  try {
    const response = await httpClient({
      method: 'DELETE',
      url: '/profile',
      data
    });

    return response.data;
  } catch (error) {
    ApiErrorHandler.handle(error);
  }
};

const updateSubscription = async (data: SubscriptionForm) => {
  try {
    const response = await httpClient({
      method: 'POST',
      url: '/subscribe',
      data
    });

    return response.data;
  } catch (error) {
    ApiErrorHandler.handle(error);
  }
};

const cancelSubscription = async (data: { password: string }) => {
  try {
    // TODO: Uncomment when you have the endpoint from the backend

    // const response = await httpClient({
    //   method: 'DELETE',
    //   url: '/subscription',
    //   data
    // });

    // return response.data;
    console.log(data, 'deleteSubscription');
  } catch (error) {
    ApiErrorHandler.handle(error);
  }
};

const getUserSubscriptions = async (searchParams: SearchParams) => {
  try {
    const response = await httpClient<Subscription>({
      url: `/subscription-history`,
      params: searchParams
    });

    return response.data;
  } catch (error) {
    ApiErrorHandler.handle(error);
  }
};

const updateAvatar = async (data: { image: File | null }) => {
  try {
    const response = await httpClient({
      method: 'POST',
      url: '/profile/image',
      headers: {
        'Content-Type': 'multipart/form-data'
      },
      data
    });

    return response.data;
  } catch (error) {
    ApiErrorHandler.handle(error);
  }
};

export {
  updateProfile,
  deleteProfile,
  updateAvatar,
  cancelSubscription,
<<<<<<< HEAD
  updateSubscription,
  getUserSubscriptions
=======
  updateSubscription
>>>>>>> 88d68ea0 (fix: refactor featured and premium articles as per requiremt. Imlement simple Featured Articles page with pagination and search.)
};
