import { queryOptions, useQuery } from '@tanstack/react-query';
import { getFollowing } from 'api/profile';
import { useParams } from 'react-router-dom';

export const buildFollowingQueryOptions = (userId: number) => {
  return queryOptions({
    queryKey: ['userFollowing', userId],
    queryFn: () => getFollowing({ userId }),
    staleTime: 1000 * 20
  });
};

const useGetFollowing = () => {
  const { userId } = useParams<{ userId: string }>();

  if (!userId) {
    throw new Error('USER ID is required');
  }

  const { data, isLoading, error } = useQuery(
    buildFollowingQueryOptions(+userId)
  );

  return { data, isLoading, error };
};

export default useGetFollowing;

const useGetFollowers = () => {
  const { userId } = useParams<{ userId: string }>();

  if (!userId) {
    throw new Error('USER ID is required');
  }

  const { data, isLoading, error } = useQuery(
    buildFollowingQueryOptions(+userId)
  );

  return { data, isLoading, error };
};

export default useGetFollowers;
