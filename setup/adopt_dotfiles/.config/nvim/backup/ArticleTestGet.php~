<?php

namespace Tests\Feature;

use App\Models\Article;
use App\Models\Tag;
use Database\Factories\UserFactory;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ArticleIndexGet extends TestCase
{
    use RefreshDatabase;

    public function test_list_all_articles(): void
    {

        Article::factory()->count(15)->create();

        $response = $this->get(
            '/api/articles/?page=1&perPage=10&sort[created_at]=asc',
        );

        $response->assertStatus(200);


        $response->assertStatus(200)
            ->assertJsonStructure([
                'data' => [
                    '*' => [
                        'id',
                        'title',
                        'content',
                        'created_at',
                        'updated_at',
                    ]
                ],
                'meta' => [
                    'current_page',
                    'from',
                    'last_page',
                    'per_page',
                    'to',
                    'total',
                ]
            ])
            ->assertJsonCount(10, 'data')
            ->assertJson([
                'meta' => [
                    'current_page' => 1,
                    'per_page' => 10,
                    'total' => 15,
                ]
            ]);
    }
}


 // // Check if the results are sorted by created_at in ascending order
 //        $data = $response->json('data');
 //        $this->assertTrue(
 //            collect($data)->every(function ($value, $key) use ($data) {
 //                return $key === 0 || $value['created_at'] >= $data[$key - 1]['created_at'];
 //            })
 //        );
