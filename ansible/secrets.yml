- name: Clone the git repository
  git:
    repo: 'https://github.com/bbuukk/pers.git'
    dest: '$HOME/pers'

- name: Write password to temporary file
  copy:
    content: '{{ vlt_pass }}'
    dest: '/tmp/vault_password.txt'
    mode: '0600'

#SSH

- name: Ensure .ssh directory exists.
  # become_user: root
  file:
    dest: '~/.ssh'
    mode: 0700
    state: directory

- name: Decrypt shh private keys
  command: ansible-vault decrypt {{ key_file }} --vault-password-file=/tmp/vault_password.txt
  register: vault_output
  loop:
    - ~/pers/ssh/id_ed25519
    - ~/pers/ssh/id_rsa
  loop_control:
    loop_var: key_file

- name: Install ssh key
  synchronize:
    src: '~/pers/ssh/'
    dest: '~/.ssh'
    mode: pull
    delete: yes
    recursive: yes
    rsync_opts:
      - '--chmod=600'

- name: Set authorized key took from file
  authorized_key:
    user: '{{ user }}'
    state: present
    key: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"

# DOTFILES

# # clone down the dotfiles and recurse the submodules (which are private)
# - name: Cloning .dotfiles
#   ansible.builtin.git:
#     repo: 'git@github.com:ThePrimeagen/.dotfiles.git'
#     dest: "{{ lookup('env', 'HOME') }}/.dotfiles"
#     recursive: yes
#     update: yes
#     accept_hostkey: yes
#     version: master

#KEEPASSXC

- name: Decrypt the file
  command: ansible-vault decrypt ~/pers/keepassxc/key_encrypted --output=~/pers/keepassxc/key_decrypted --vault-password-file=/tmp/vault_password.txt
  register: result
  ignore_errors: yes

- name: Check if decryption was successful
  fail:
    msg: 'Decryption failed with the following output: {{ result.stderr }}'
  when: result.rc != 0

# Delete the password file

- name: Remove temporary password file
  file:
    path: '/tmp/vault_password.txt'
    state: absent
#

