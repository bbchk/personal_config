---
######################
# ssh
######################

- name: Ensure .ssh directory exists.
  file:
    dest: "~/.ssh"
    mode: 0700
    state: directory

- name: Find all private ssh keys
  find:
    paths: "{{ playbook_dir }}/secrets/ssh"
    patterns: "*[^.]*"
  register: private_ssh_key_files

- name: Decrypt each private ssh key
  command: ansible-vault decrypt {{ private_ssh_key_file.path }} --output "/home/{{ user }}/.ssh/{{ private_ssh_key_file.path }}"
  loop: "{{ private_ssh_key_files.files }}"
  loop_control:
    loop_var: private_ssh_key_file
  ignore_errors: true

- name: Find all public ssh keys
  find:
    paths: "{{ playbook_dir }}/secrets/ssh"
    patterns: "*.pub"
  register: ssh_public_key_files

- name: Copy all the public ssh keys to ~/.ssh folder
  ansible.builtin.copy:
    loop: "{{ ssh_public_key_files.files }}"
    loop_control:
      loop_var: public_ssh_file
    src: "{{ public_ssh_file.path }}"
    dest: "/home/{{ user }}/.ssh/{{ public_ssh_file.path | basename }}"
    mode: "0644"

- name: Ensure .ssh files have 0600 permissions
  file:
    path: "{{ item }}"
    mode: "0600"
  with_fileglob:
    - "~/.ssh/*"

#
######################
# passwords store
######################

- name: Create secrets folder
  file:
    path: "/home/{{ user }}/secrets"
    state: directory
    mode: "0600"
  register: secrets_dir_result

- name: Find all the password files
  find:
    paths: "{{ playbook_dir }}/secrets/passwords"
    patterns: "*.*"
  register: password_files

- name: Decrypt each password file
  command: ansible-vault decrypt {{ pass_file.path }} --output {{ secrets_dir_result.path }}/{{ pass_file.path | basename }}
  loop: "{{ password_files.files }}"
  loop_control:
    loop_var: pass_file
  ignore_errors: true
#
######################
# vpn credentials
######################

- name: Decrypt vpn credentials file
  command: ansible-vault decrypt {{ playbook_dir }}/secrets/vpn/credentials.cfg  --output {{ secrets_dir_result.path  }}/vpn_credentials.cfg
  ignore_errors: true
